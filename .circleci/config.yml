version: '2.1'
orbs:
  aws-cli: circleci/aws-cli@3.1.1

commands:
  destroy-infra:
    steps:
      - run:
          name: destroy infrastructure
          when: on_fail
          command: aws cloudformation delete-stack --stack-name kc-${CIRCLE_WORKFLOW_ID:0:5}

jobs:
  create-infra:
    executor: aws-cli/default
    steps:
      - checkout
      - aws-cli/setup
      - run:
          name: Create Cloudformation stack
          command: >
            aws cloudformation deploy
            --template-file ubuntu_server.yml
            --stack-name kc-${CIRCLE_WORKFLOW_ID:0:5}
      - run:
          name: Update inventory file
          command: |
            echo [all] > inventory.txt
            echo $(aws ec2 describe-instances \
            --query 'Reservations[*].Instances[*].PublicIpAddress' \
            --output text) >> inventory.txt
      - run: cat inventory.txt
      - persist_to_workspace:
          root: .
          paths:
            - inventory.txt
      - destroy-infra
  configure-infra:
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - 'a0:a8:5a:af:03:a2:b2:bd:b6:38:10:87:06:75:e3:b2'
      - run:
          name: Install deps
          command: |
            apk add --update --no-cache ansible openssh
      - attach_workspace:
          at: .
      - run: ls -al
      - run: cat inventory.txt
      - run: ls -al ~/.ssh/
      - run:
          name: configure server
          command: |
            ansible-playbook -i inventory.txt main-remote.yml --key-file ~/.ssh/id_rsa_a0a85aaf03a2b2bdb63810870675e3b2

workflows:
  main:
    jobs:
      # - create-infra
      - configure-infra
        # requires:
        #   - create-infra
